name: Deploy to Server

on:
  push:
    branches:
      - server

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code from the branch
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # 3. Log in to GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 4. Build and push Docker image to GHCR
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}/my-image:latest

      # 5. Set up SSH using the private key stored in GitHub Secrets
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 6. Clean up Docker environment on remote server
      - name: Clean up Docker environment
        run: |
          ssh -o StrictHostKeyChecking=no root@51.210.102.229 'bash /root/limpia.sh'

      # 7. Deploy the container on the remote server
      - name: Deploy container on remote server
        run: |
          ssh -o StrictHostKeyChecking=no root@51.210.102.229 << 'EOF'
            docker pull ghcr.io/${{ github.repository }}/my-image:latest
            docker run -d -p 5432:5432 --name my-container ghcr.io/${{ github.repository }}/my-image:latest
          EOF

      # 8. Verify that the new container is running
      - name: Verify new container is running
        run: |
          ssh -o StrictHostKeyChecking=no root@51.210.102.229 << 'EOF'
            echo "Verifying new container is running..."
            docker ps -a
          EOF
